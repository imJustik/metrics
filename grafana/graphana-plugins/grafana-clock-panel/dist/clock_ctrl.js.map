{"version":3,"sources":["../src/clock_ctrl.js"],"names":[],"mappings":"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","file":"clock_ctrl.js","sourcesContent":["import {PanelCtrl} from 'app/plugins/sdk';\nimport moment from 'moment';\nimport _ from 'lodash';\nimport './css/clock-panel.css!';\n\nconst panelDefaults = {\n  mode: 'time',\n  clockType: '24 hour',\n  offsetFromUtc: null,\n  offsetFromUtcMinutes: null,\n  bgColor: null,\n  countdownSettings: {\n    endCountdownTime: moment().seconds(0).milliseconds(0).add(1, 'day').toDate(),\n    endText: '00:00:00'\n  },\n  dateSettings: {\n    showDate: false,\n    dateFormat: 'YYYY-MM-DD',\n    fontSize: '20px',\n    fontWeight: 'normal'\n  },\n  timeSettings: {\n    customFormat: 'HH:mm:ss',\n    fontSize: '60px',\n    fontWeight: 'normal'\n  }\n};\n\nexport class ClockCtrl extends PanelCtrl {\n  constructor($scope, $injector) {\n    super($scope, $injector);\n    _.defaultsDeep(this.panel, panelDefaults);\n\n    if (!(this.panel.countdownSettings.endCountdownTime instanceof Date)) {\n      this.panel.countdownSettings.endCountdownTime = moment(this.panel.countdownSettings.endCountdownTime).toDate();\n    }\n\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n    this.events.on('panel-teardown', this.onPanelTeardown.bind(this));\n    this.events.on('panel-initialized', this.render.bind(this));\n\n    this.updateClock();\n  }\n\n  onInitEditMode() {\n    this.addEditorTab('Options', 'public/plugins/grafana-clock-panel/editor.html', 2);\n  }\n\n  onPanelTeardown() {\n    this.$timeout.cancel(this.nextTickPromise);\n  }\n\n  updateClock() {\n    if (this.panel.mode === 'time') {\n      this.renderTime();\n    } else {\n      this.renderCountdown();\n    }\n\n    this.nextTickPromise = this.$timeout(this.updateClock.bind(this), 1000);\n  }\n\n  renderTime() {\n    let now;\n\n    if (this.panel.offsetFromUtc && this.panel.offsetFromUtcMinutes) {\n      const offsetInMinutes = (parseInt(this.panel.offsetFromUtc, 10) * 60) + parseInt(this.panel.offsetFromUtcMinutes, 10);\n      now = moment().utcOffset(offsetInMinutes);\n    } else if (this.panel.offsetFromUtc && !this.panel.offsetFromUtcMinutes) {\n      now = moment().utcOffset(parseInt(this.panel.offsetFromUtc, 10));\n    } else {\n      now = moment();\n    }\n\n    if (this.panel.dateSettings.showDate) {\n      this.date = now.format(this.panel.dateSettings.dateFormat);\n    }\n\n    this.time = now.format(this.getTimeFormat());\n  }\n\n  getTimeFormat() {\n    if (this.panel.clockType === '24 hour') {\n      return 'HH:mm:ss';\n    }\n\n    if (this.panel.clockType === '12 hour') {\n      return 'h:mm:ss A';\n    }\n\n    return this.panel.timeSettings.customFormat;\n  }\n\n  renderCountdown() {\n    if (!this.panel.countdownSettings.endCountdownTime) {\n      this.time = this.panel.countdownSettings.endText;\n    }\n\n    const now = moment();\n    const timeLeft = moment.duration(moment(this.panel.countdownSettings.endCountdownTime).diff(now));\n    let formattedTimeLeft = '';\n\n    if (timeLeft.asSeconds() <= 0) {\n      this.time = this.panel.countdownSettings.endText;\n      return;\n    }\n\n    let previous = '';\n\n    if (timeLeft.years() > 0) {\n      formattedTimeLeft = timeLeft.years() === 1 ? '1 year, ' : timeLeft.years() + ' years, ';\n      previous = 'years';\n    }\n    if (timeLeft.months() > 0 || previous === 'years') {\n      formattedTimeLeft += timeLeft.months() === 1 ? '1 month, ' : timeLeft.months() + ' months, ';\n      previous = 'month';\n    }\n    if (timeLeft.days() > 0 || previous === 'months') {\n      formattedTimeLeft += timeLeft.days() === 1 ? '1 day, ' : timeLeft.days() + ' days, ';\n      previous = 'days';\n    }\n    if (timeLeft.hours() > 0 || previous === 'days') {\n      formattedTimeLeft += timeLeft.hours() === 1 ? '1 hour, ' : timeLeft.hours() + ' hours, ';\n      previous = 'hours';\n    }\n\n    if (timeLeft.minutes() > 0 || previous === 'hours') {\n      formattedTimeLeft += timeLeft.minutes() === 1 ? '1 minute, ' : timeLeft.minutes() + ' minutes, ';\n    }\n\n    formattedTimeLeft += timeLeft.seconds() === 1 ? '1 second ' : timeLeft.seconds() + ' seconds';\n    this.time = formattedTimeLeft;\n  }\n\n  link(scope, elem) {\n    this.events.on('render', () => {\n      const $panelContainer = elem.find('.panel-container');\n\n      if (this.panel.bgColor) {\n        $panelContainer.css('background-color', this.panel.bgColor);\n      } else {\n        $panelContainer.css('background-color', '');\n      }\n    });\n  }\n}\n\nClockCtrl.templateUrl = 'module.html';\n"]}